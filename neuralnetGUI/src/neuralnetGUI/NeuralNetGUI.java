/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package neuralnetGUI;

import java.awt.CardLayout;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JFileChooser;
import neuralnet.*;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import static neuralnetGUI.Helpers.*;
import Jama.Matrix;

/**
 *
 * @author tosin
 */
public class NeuralNetGUI extends javax.swing.JFrame {

    // instance variables for neural network and training
    private Network neuralnet;
    private Training netTrainer;
    private Data trainingData;
    private Data testData;

    // constants
    private int MAX_NODES = 1000;
    private static final int INPUT_ERROR = -1;
    private static final String DEFAULT_STRING = "None";

    /**
     * Creates new form MainApplication
     */
    public NeuralNetGUI() {
        initComponents();
    }

    /**
     * Read in training parameters from text field.
     *
     * @return Training Parameters if successful and if they are valid.
     * Otherwise return null
     */
    private Parameters readTrainingParameters() {
        String inputLearningRate = learningRateTF.getText();
        String inputEpochs = epochsTF.getText();
        String inputMinibatchSize = minibatchTF.getText();

        // were strings successfully parsed?
        if (inputEpochs == null || inputLearningRate == null || inputMinibatchSize == null) {
            JOptionPane.showMessageDialog(null, "Please enter a value for all parameters.",
                    "Incorrect Training Parameter", JOptionPane.INFORMATION_MESSAGE);
            return null;
        }

        double eta;
        int epochs, minibatchSize;
        try {
            eta = Double.parseDouble(inputLearningRate);
            epochs = Integer.parseInt(inputEpochs);
            minibatchSize = Integer.parseInt(inputMinibatchSize);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error parsing input.",
                    "Incorrect Training Parameter", JOptionPane.INFORMATION_MESSAGE);
            return null;
        }

        // handle input errors
        if (eta < 0) {
            JOptionPane.showMessageDialog(null, "The learning rate is negative.",
                    "Incorrect Training Parameter", JOptionPane.INFORMATION_MESSAGE);
            return null;
        }
        if (epochs < 1 || epochs > 5000) {
            JOptionPane.showMessageDialog(null, "Number of epochs must be between 1 and 5000",
                    "Incorrect Training Parameter", JOptionPane.INFORMATION_MESSAGE);
            return null;
        }
        if (minibatchSize < 1 || minibatchSize > this.trainingData.size()) {
            JOptionPane.showMessageDialog(null,
                    "Mini-batch size must be between 1 and the size of training data",
                    "Incorrect Training Parameter", JOptionPane.INFORMATION_MESSAGE);
            return null;
        }

        // store inputs if valid
        return new Parameters(eta, epochs, minibatchSize);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dataPanel = new javax.swing.JPanel();
        displayTrainingDataPanel = new javax.swing.JPanel();
        trainingDataScrollPane = new javax.swing.JScrollPane();
        trainingTable = new javax.swing.JTable();
        displayTestDataPanel = new javax.swing.JPanel();
        testDataScrollPane = new javax.swing.JScrollPane();
        testTable = new javax.swing.JTable();
        mainTabbedPane = new javax.swing.JTabbedPane();
        watchBackPropMenuItem = new javax.swing.JMenuItem();
        networkPanel = new javax.swing.JPanel();
        networkInformationPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        numLayerFiveLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        netAccuracyTF = new javax.swing.JLabel();
        networkNamePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        netNameLabel = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        numLayerOneLabel = new javax.swing.JLabel();
        numLayerTwoLabel = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        numLayerFourLabel = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        numLayerThreeLabel = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        functionLabel = new javax.swing.JLabel();
        trainingInformationPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        learningRateTF = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        epochsTF = new javax.swing.JTextField();
        minibatchTF = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        trainingExampleFnameLbl = new javax.swing.JLabel();
        trainingExampleRowLbl = new javax.swing.JLabel();
        trainingExampleColLbl = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        trainingLabelFnameLbl = new javax.swing.JLabel();
        trainingLabelRowLbl = new javax.swing.JLabel();
        trainingLabelColLbl = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        testExampleFnameLbl = new javax.swing.JLabel();
        testExampleRowLbl = new javax.swing.JLabel();
        testExampleColLbl = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        testLabelFnameLbl = new javax.swing.JLabel();
        testLabelRowLbl = new javax.swing.JLabel();
        testLabelColLbl = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        inputRunNetworkTF = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        outputRunNetworkTF = new javax.swing.JTextField();
        runNetworkButton = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        newNetworkMenuItem = new javax.swing.JMenuItem();
        loadTrainingDataMenuItem = new javax.swing.JMenuItem();
        trainMenu = new javax.swing.JMenu();
        trainNetworkMenuItem = new javax.swing.JMenuItem();
        evaluateMenu = new javax.swing.JMenu();
        loadTestDataMenuItem = new javax.swing.JMenuItem();
        testNetworkMenuItem = new javax.swing.JMenuItem();

        displayTrainingDataPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Training Samples"));

        trainingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        trainingDataScrollPane.setViewportView(trainingTable);

        javax.swing.GroupLayout displayTrainingDataPanelLayout = new javax.swing.GroupLayout(displayTrainingDataPanel);
        displayTrainingDataPanel.setLayout(displayTrainingDataPanelLayout);
        displayTrainingDataPanelLayout.setHorizontalGroup(
            displayTrainingDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayTrainingDataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(trainingDataScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
                .addContainerGap())
        );
        displayTrainingDataPanelLayout.setVerticalGroup(
            displayTrainingDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayTrainingDataPanelLayout.createSequentialGroup()
                .addComponent(trainingDataScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                .addContainerGap())
        );

        displayTestDataPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Test Samples"));

        testTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        testDataScrollPane.setViewportView(testTable);

        javax.swing.GroupLayout displayTestDataPanelLayout = new javax.swing.GroupLayout(displayTestDataPanel);
        displayTestDataPanel.setLayout(displayTestDataPanelLayout);
        displayTestDataPanelLayout.setHorizontalGroup(
            displayTestDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayTestDataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(testDataScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        displayTestDataPanelLayout.setVerticalGroup(
            displayTestDataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayTestDataPanelLayout.createSequentialGroup()
                .addComponent(testDataScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout dataPanelLayout = new javax.swing.GroupLayout(dataPanel);
        dataPanel.setLayout(dataPanelLayout);
        dataPanelLayout.setHorizontalGroup(
            dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(displayTrainingDataPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(displayTestDataPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        dataPanelLayout.setVerticalGroup(
            dataPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dataPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(displayTrainingDataPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(displayTestDataPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        mainTabbedPane.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        watchBackPropMenuItem.setText("Watch Last Back-Propagation");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        networkInformationPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Network Info"));

        jLabel12.setText("Layer 5:");

        numLayerFiveLabel.setText("None");

        jLabel7.setText("Accuracy:");

        netAccuracyTF.setText("N/A");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numLayerFiveLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(netAccuracyTF, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(numLayerFiveLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(netAccuracyTF))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Name:");

        netNameLabel.setText("None");

        javax.swing.GroupLayout networkNamePanelLayout = new javax.swing.GroupLayout(networkNamePanel);
        networkNamePanel.setLayout(networkNamePanelLayout);
        networkNamePanelLayout.setHorizontalGroup(
            networkNamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(networkNamePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(netNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        networkNamePanelLayout.setVerticalGroup(
            networkNamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(networkNamePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(networkNamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(netNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Input:");

        jLabel4.setText("Layer 2:");

        numLayerOneLabel.setText("None");

        numLayerTwoLabel.setText("None");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(numLayerOneLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(numLayerTwoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(numLayerOneLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(numLayerTwoLabel))
                .addContainerGap())
        );

        numLayerFourLabel.setText("None");

        jLabel11.setText("Layer 4:");

        jLabel9.setText("Layer 3:");

        numLayerThreeLabel.setText("None");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(numLayerThreeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                    .addComponent(numLayerFourLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(numLayerThreeLabel)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(numLayerFourLabel))
                .addContainerGap())
        );

        jLabel13.setText("Function:");

        functionLabel.setText("None");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(functionLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(functionLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout networkInformationPanelLayout = new javax.swing.GroupLayout(networkInformationPanel);
        networkInformationPanel.setLayout(networkInformationPanelLayout);
        networkInformationPanelLayout.setHorizontalGroup(
            networkInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(networkInformationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(networkInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(networkNamePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(networkInformationPanelLayout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        networkInformationPanelLayout.setVerticalGroup(
            networkInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(networkInformationPanelLayout.createSequentialGroup()
                .addComponent(networkNamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(networkInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 16, Short.MAX_VALUE))
        );

        trainingInformationPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Training Parameters"));

        jLabel2.setText("Learning Rate:");

        learningRateTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                learningRateTFActionPerformed(evt);
            }
        });

        jLabel5.setText("Number of Epochs:");

        epochsTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                epochsTFActionPerformed(evt);
            }
        });

        jLabel6.setText("Mini-batch Size:");

        javax.swing.GroupLayout trainingInformationPanelLayout = new javax.swing.GroupLayout(trainingInformationPanel);
        trainingInformationPanel.setLayout(trainingInformationPanelLayout);
        trainingInformationPanelLayout.setHorizontalGroup(
            trainingInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(trainingInformationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(trainingInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(trainingInformationPanelLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(learningRateTF, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(epochsTF, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(trainingInformationPanelLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(minibatchTF, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        trainingInformationPanelLayout.setVerticalGroup(
            trainingInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(trainingInformationPanelLayout.createSequentialGroup()
                .addGroup(trainingInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(learningRateTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(epochsTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(trainingInformationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(minibatchTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Data"));

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Training Examples"));

        trainingExampleFnameLbl.setText("File Name");

        trainingExampleRowLbl.setText("Rows");

        trainingExampleColLbl.setText("Columns");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(trainingExampleFnameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(trainingExampleRowLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(trainingExampleColLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(trainingExampleRowLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(trainingExampleColLbl))
            .addComponent(trainingExampleFnameLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Training Labels"));

        trainingLabelFnameLbl.setText("File Name");

        trainingLabelRowLbl.setText("Rows");

        trainingLabelColLbl.setText("Columns");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(trainingLabelFnameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(trainingLabelRowLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(trainingLabelColLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(trainingLabelFnameLbl)
                .addComponent(trainingLabelRowLbl)
                .addComponent(trainingLabelColLbl))
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder("Test Examples"));

        testExampleFnameLbl.setText("File Name");

        testExampleRowLbl.setText("Rows");

        testExampleColLbl.setText("Columns");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(testExampleFnameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(testExampleRowLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(testExampleColLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(testExampleColLbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(testExampleRowLbl)
                .addComponent(testExampleFnameLbl))
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Test Labels"));

        testLabelFnameLbl.setText("File Name");

        testLabelRowLbl.setText("Rows");

        testLabelColLbl.setText("Columns");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(testLabelFnameLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(testLabelRowLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(testLabelColLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(testLabelFnameLbl)
                .addComponent(testLabelRowLbl)
                .addComponent(testLabelColLbl))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Run Network"));

        inputRunNetworkTF.setText("Please Enter Input to Network as Comma Separated List");
        inputRunNetworkTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputRunNetworkTFActionPerformed(evt);
            }
        });

        jLabel8.setText("Output:");

        jLabel10.setText("Input:");

        runNetworkButton.setText("Run");
        runNetworkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runNetworkButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(inputRunNetworkTF, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(outputRunNetworkTF, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(runNetworkButton)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputRunNetworkTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(outputRunNetworkTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(runNetworkButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout networkPanelLayout = new javax.swing.GroupLayout(networkPanel);
        networkPanel.setLayout(networkPanelLayout);
        networkPanelLayout.setHorizontalGroup(
            networkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, networkPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(networkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(trainingInformationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(networkInformationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        networkPanelLayout.setVerticalGroup(
            networkPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(networkPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(networkInformationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(trainingInformationPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        fileMenu.setText("File");

        newNetworkMenuItem.setText("New Network...");
        newNetworkMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newNetworkMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(newNetworkMenuItem);

        loadTrainingDataMenuItem.setText("Load Training Data...");
        loadTrainingDataMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadTrainingDataMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(loadTrainingDataMenuItem);

        menuBar.add(fileMenu);

        trainMenu.setText("Train");

        trainNetworkMenuItem.setText("Train Network");
        trainNetworkMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trainNetworkMenuItemActionPerformed(evt);
            }
        });
        trainMenu.add(trainNetworkMenuItem);

        menuBar.add(trainMenu);

        evaluateMenu.setText("Evaluate");

        loadTestDataMenuItem.setText("Load Test Data...");
        loadTestDataMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadTestDataMenuItemActionPerformed(evt);
            }
        });
        evaluateMenu.add(loadTestDataMenuItem);

        testNetworkMenuItem.setText("Test Network");
        testNetworkMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testNetworkMenuItemActionPerformed(evt);
            }
        });
        evaluateMenu.add(testNetworkMenuItem);

        menuBar.add(evaluateMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(networkPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(networkPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // TODO: change how data is gotten from dialog.
    private void newNetworkMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newNetworkMenuItemActionPerformed
        // pass map of strings to Jlabels
        Map<String, JLabel> labelMap = new HashMap<>();
        labelMap.put("netName", this.netNameLabel);
        labelMap.put("functionName", this.functionLabel);
        labelMap.put("layerOne", this.numLayerOneLabel);
        labelMap.put("layerTwo", this.numLayerTwoLabel);
        labelMap.put("layerThree", this.numLayerThreeLabel);
        labelMap.put("layerFour", this.numLayerFourLabel);
        labelMap.put("layerFive", this.numLayerFiveLabel);

        // TODO: change, add window close listener instead of passing inout parameter
        CreateNetDialog dialog = new CreateNetDialog(NeuralNetGUI.this,
                true, this.MAX_NODES, labelMap);

        // add a listener to get the training data on close
        dialog.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                // if values read, create network 
                List<Integer> layers = dialog.getLayers();
                if (!layers.isEmpty()) {
                    // get function
                    Integer[] tempLayers = new Integer[layers.size()];
                    tempLayers = layers.toArray(tempLayers);
                    int[] netLayers = new int[tempLayers.length];
                    for (int i = 0; i < tempLayers.length; i++) {
                        netLayers[i] = tempLayers[i];
                    }
                    
                    String functionName = dialog.getFunctionName();
                    
                    // by default function is sigmoid
                    Function func = new Functions.Sigmoid();
                    if (functionName == Functions.Relu.Name){
                        func = new Functions.Relu();
                    } 
                    NeuralNetGUI.this.neuralnet = new Network(netLayers, func);
                }

            }
        });

        dialog.setVisible(true);

    }//GEN-LAST:event_newNetworkMenuItemActionPerformed

    private void loadTrainingDataMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadTrainingDataMenuItemActionPerformed
        LoadDataDialog dialog = new LoadDataDialog(NeuralNetGUI.this,
                "Load Training Data", true);
        // add a listener to get the training data on close
        dialog.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                Data data = dialog.getData();
                if (data != null) {
                    String exampleFileName = data.getSamplesFileName();
                    String labelFileName = data.getLabelsFileName();
                    int exampleRow = data.getSamples().size();
                    int exampleCol = data.getSamples().get(0).getInput().getRowDimension();
                    int labelRow = data.getSamples().size();
                    int labelCol = data.getSamples().get(0).getLabel().getRowDimension();
                    // set example info
                    NeuralNetGUI.this.trainingData = data;
                    NeuralNetGUI.this.trainingExampleFnameLbl.
                            setText(filePathToName(exampleFileName));
                    NeuralNetGUI.this.trainingExampleRowLbl.
                            setText("Rows: " + String.valueOf(exampleRow));
                    NeuralNetGUI.this.trainingExampleColLbl.
                            setText("Columns: " + String.valueOf(exampleCol));
                    // set label info
                    NeuralNetGUI.this.trainingLabelFnameLbl.
                            setText(filePathToName(labelFileName));
                    NeuralNetGUI.this.trainingLabelRowLbl.
                            setText("Rows: " + String.valueOf(labelRow));
                    NeuralNetGUI.this.trainingLabelColLbl.
                            setText("Columns: " + String.valueOf(labelCol));
                }
            }
        });

        dialog.setVisible(true);

    }//GEN-LAST:event_loadTrainingDataMenuItemActionPerformed

    // train the network
    private void trainNetworkMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trainNetworkMenuItemActionPerformed

        // can a network be created and trained?
        if (this.neuralnet == null) {
            JOptionPane.showMessageDialog(null, "Please create a network First.",
                    "Network Training Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        } else if (this.trainingData.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please load training data.",
                    "Network Training Error", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        // read in and validate training parameters. Display appropriate error messages
        Parameters params = readTrainingParameters();
        if (params == null) {
            return;
        }

        JOptionPane.showMessageDialog(null, "Please wait. About to train network",
                "Training Network", JOptionPane.INFORMATION_MESSAGE);
        //train the network 
        Training trainer;
        try {
            trainer = new Training(this.neuralnet, this.trainingData.samples,
                params.epochs, params.minibatchSize, params.eta); 
            this.netTrainer = trainer;      
            this.neuralnet = this.netTrainer.getTrainedNet();       
        } catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(null, "Make sure network and data "
                    + "dimensions agree.",
                "Training Network", JOptionPane.INFORMATION_MESSAGE);
        } 
        

        
        
    }//GEN-LAST:event_trainNetworkMenuItemActionPerformed

    private void epochsTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_epochsTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_epochsTFActionPerformed

    private void learningRateTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_learningRateTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_learningRateTFActionPerformed

    private void loadTestDataMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadTestDataMenuItemActionPerformed
        LoadDataDialog dialog = new LoadDataDialog(NeuralNetGUI.this,
                "Load Test Data", true);
        // add a listener to get the training data on close
        dialog.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                Data data = dialog.getData();
                if (data != null) {
                    String exampleFileName = data.getSamplesFileName();
                    String labelFileName = data.getLabelsFileName();
                    int exampleRow = data.getSamples().size();
                    int exampleCol = data.getSamples().get(0).getInput().getRowDimension();
                    int labelRow = data.getSamples().size();
                    int labelCol = data.getSamples().get(0).getLabel().getRowDimension();
                    // set example info
                    NeuralNetGUI.this.testData = data;
                    NeuralNetGUI.this.testExampleFnameLbl.
                            setText(filePathToName(exampleFileName));
                    NeuralNetGUI.this.testExampleRowLbl.
                            setText("Rows: " + String.valueOf(exampleRow));
                    NeuralNetGUI.this.testExampleColLbl.
                            setText("Columns: " + String.valueOf(exampleCol));
                    // set label info
                    NeuralNetGUI.this.testLabelFnameLbl.
                            setText(filePathToName(labelFileName));
                    NeuralNetGUI.this.testLabelRowLbl.
                            setText("Rows: " + String.valueOf(labelRow));
                    NeuralNetGUI.this.testLabelColLbl.
                            setText("Columns: " + String.valueOf(labelCol));
                }
            }
        });
        dialog.setVisible(true);
    }//GEN-LAST:event_loadTestDataMenuItemActionPerformed

    private void testNetworkMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testNetworkMenuItemActionPerformed
        if (this.neuralnet == null) {
            JOptionPane.showMessageDialog(null, "Please Create a Network",
                    "No Neural Network", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        if (this.testData == null) {
            JOptionPane.showMessageDialog(null, "Please Load Test Data",
                    "No Test Data", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        double accuracy = this.neuralnet.calculateAccuracy(this.testData.getSamples());
        this.netAccuracyTF.setText(String.format("%.2f%%", accuracy));

    }//GEN-LAST:event_testNetworkMenuItemActionPerformed

    private void inputRunNetworkTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputRunNetworkTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputRunNetworkTFActionPerformed

    private void runNetworkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runNetworkButtonActionPerformed

        if (this.neuralnet == null) {
            JOptionPane.showMessageDialog(null, "Please Train a Network First.",
                    "Run Network", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        String[] inputStrings = inputRunNetworkTF.getText().split(",");
        Matrix input = new Matrix(inputStrings.length, 1);

        for (int i = 0; i < input.getRowDimension(); i++) {
            double val;
            try {
                val = Double.parseDouble(inputStrings[i]);
                input.set(i, 0, val);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null,
                        "Please enter only numbers separated by commas.",
                        "Run Network", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
        }

        Matrix output;
        try {
            output = this.neuralnet.feedForward(input);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,
                    "Possible mismatch between example size and network input "
                    + "size. Please enter the corect number of inputs.",
                    "Run Network", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        // set output if feedforward successful
        outputRunNetworkTF.setText("");
        StringBuffer temp = new StringBuffer();
        for (int i = 0; i < output.getRowDimension(); i++) {
            temp.append(String.format("%.2f ", output.get(i, 0)));
        }
        outputRunNetworkTF.setText(temp.toString());
    }//GEN-LAST:event_runNetworkButtonActionPerformed
    /*
        Action Handling Code End

     */

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NeuralNetGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NeuralNetGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NeuralNetGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NeuralNetGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NeuralNetGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel dataPanel;
    private javax.swing.JPanel displayTestDataPanel;
    private javax.swing.JPanel displayTrainingDataPanel;
    private javax.swing.JTextField epochsTF;
    private javax.swing.JMenu evaluateMenu;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JLabel functionLabel;
    private javax.swing.JTextField inputRunNetworkTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JTextField learningRateTF;
    private javax.swing.JMenuItem loadTestDataMenuItem;
    private javax.swing.JMenuItem loadTrainingDataMenuItem;
    private javax.swing.JTabbedPane mainTabbedPane;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JTextField minibatchTF;
    private javax.swing.JLabel netAccuracyTF;
    private javax.swing.JLabel netNameLabel;
    private javax.swing.JPanel networkInformationPanel;
    private javax.swing.JPanel networkNamePanel;
    private javax.swing.JPanel networkPanel;
    private javax.swing.JMenuItem newNetworkMenuItem;
    private javax.swing.JLabel numLayerFiveLabel;
    private javax.swing.JLabel numLayerFourLabel;
    private javax.swing.JLabel numLayerOneLabel;
    private javax.swing.JLabel numLayerThreeLabel;
    private javax.swing.JLabel numLayerTwoLabel;
    private javax.swing.JTextField outputRunNetworkTF;
    private javax.swing.JButton runNetworkButton;
    private javax.swing.JScrollPane testDataScrollPane;
    private javax.swing.JLabel testExampleColLbl;
    private javax.swing.JLabel testExampleFnameLbl;
    private javax.swing.JLabel testExampleRowLbl;
    private javax.swing.JLabel testLabelColLbl;
    private javax.swing.JLabel testLabelFnameLbl;
    private javax.swing.JLabel testLabelRowLbl;
    private javax.swing.JMenuItem testNetworkMenuItem;
    private javax.swing.JTable testTable;
    private javax.swing.JMenu trainMenu;
    private javax.swing.JMenuItem trainNetworkMenuItem;
    private javax.swing.JScrollPane trainingDataScrollPane;
    private javax.swing.JLabel trainingExampleColLbl;
    private javax.swing.JLabel trainingExampleFnameLbl;
    private javax.swing.JLabel trainingExampleRowLbl;
    private javax.swing.JPanel trainingInformationPanel;
    private javax.swing.JLabel trainingLabelColLbl;
    private javax.swing.JLabel trainingLabelFnameLbl;
    private javax.swing.JLabel trainingLabelRowLbl;
    private javax.swing.JTable trainingTable;
    private javax.swing.JMenuItem watchBackPropMenuItem;
    // End of variables declaration//GEN-END:variables

}
